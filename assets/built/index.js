!function(){"use strict";async function t(t){try{const e="https://plausible.sivert.io/api/stats/golf.sivert.io/top-stats/",r=(new Date).toISOString().split("T")[0],o=new URLSearchParams({period:"all",date:r,filters:JSON.stringify([["is","event:page",[t]]]),with_imported:"true",comparison:"previous_period",compare_from:"undefined",compare_to:"undefined",match_day_of_week:"true"}),n=await fetch(`${e}?${o.toString()}`);if(!n.ok)throw new Error(`HTTP error! Status: ${n.status}`);const i=await n.json(),s=i.top_stats.find((t=>"Total visits"===t.name))?.value||0;return console.log(`Total unique visitors for ${t}:`,s),s}catch(e){return console.error(`Failed to fetch total visitors for ${t}:`,e),"Error"}}!function(){let e=document.querySelector('link[rel="next"]')?.getAttribute("href");if(!e)return;document.querySelectorAll(".post").forEach((e=>{const r=e.querySelector(".gh-card-link")?.getAttribute("href"),o=document.getElementById(r);r&&o&&t(r).then((t=>{o.textContent=`${t} views`}))})),new IntersectionObserver(((r,o)=>{r.forEach((r=>{r.isIntersecting&&e&&async function(t){try{const e=await fetch(t);if(!e.ok)throw new Error("Failed to fetch page");const r=await e.text(),o=(new DOMParser).parseFromString(r,"text/html"),n=o.querySelectorAll(".post"),i=o.querySelector('link[rel="next"]')?.getAttribute("href");return{posts:n,nextLink:i}}catch(t){throw new Error(t)}}(e).then((r=>{let{posts:n,nextLink:i}=r;const s=document.querySelector(".gh-postfeed");n.forEach((e=>{s.append(e);const r=e.querySelector(".gh-card-link")?.getAttribute("href"),o=e.querySelector(".gh-card-meta[id]");r&&o&&t(r).then((t=>{o.textContent=`${t} views`}))})),i?(e=i,o.observe(document.querySelector(".post:last-of-type"))):o.disconnect()})).catch((t=>console.error("Failed to fetch next page:",t)))}))}),{rootMargin:"150px"}).observe(document.querySelector(".post:last-of-type"))}()}();
//# sourceMappingURL=index.js.map
