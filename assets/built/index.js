!function(){"use strict";async function e(e,t,r){try{const o=await fetch("https://plausible.sivert.io/api/v2/query",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({site_id:r,metrics:["pageviews"],date_range:"all",filters:[["is","event:page",[e]]]})});if(!o.ok)throw new Error(`HTTP error! Status: ${o.status}`);const n=await o.json(),c=n.results[0]?.metrics[0]||0;return console.log(`Fetched ${c} views for ${e}`),c}catch(t){return console.error(`Failed to fetch page views for ${e}:`,t),"Error"}}!function(){const t="slJQ_QO9KtsjYsEhAZ0Hk5hzB5oUk4ikrJ-ZAn3n4gVcUB3GrSk0Mw1_w9h3YecT",r="golf.sivert.io";let o=document.querySelector('link[rel="next"]')?.getAttribute("href");if(!o)return;document.querySelectorAll(".post").forEach((o=>{const n=o.querySelector(".gh-card-link")?.getAttribute("href"),c=document.getElementById(n);n&&c&&e(n,t,r).then((e=>{c.textContent=`${e} views`}))})),new IntersectionObserver(((n,c)=>{n.forEach((n=>{n.isIntersecting&&o&&async function(e){try{const t=await fetch(e);if(!t.ok)throw new Error("Failed to fetch page");const r=await t.text(),o=(new DOMParser).parseFromString(r,"text/html"),n=o.querySelectorAll(".post"),c=o.querySelector('link[rel="next"]')?.getAttribute("href");return{posts:n,nextLink:c}}catch(e){throw new Error(e)}}(o).then((n=>{let{posts:s,nextLink:i}=n;const a=document.querySelector(".gh-postfeed");s.forEach((o=>{a.append(o);const n=o.querySelector(".gh-card-link")?.getAttribute("href"),c=o.querySelector(".gh-card-meta[id]");n&&c&&e(n,t,r).then((e=>{c.textContent=`${e} views`}))})),i?(o=i,c.observe(document.querySelector(".post:last-of-type"))):c.disconnect()})).catch((e=>console.error("Failed to fetch next page:",e)))}))}),{rootMargin:"150px"}).observe(document.querySelector(".post:last-of-type"))}()}();
//# sourceMappingURL=index.js.map
