!function(){"use strict";async function e(e,t){try{const r=await fetch("https://plausible.sivert.io/api/v2/query",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({site_id:t,metrics:["pageviews"],date_range:"all",filters:[["is","event:page",[e]]]})});if(!r.ok)throw new Error(`HTTP error! Status: ${r.status}`);const o=await r.json(),n=o.results[0]?.metrics[0]||0;return console.log(`Fetched ${n} views for ${e}`),n}catch(t){return console.error(`Failed to fetch page views for ${e}:`,t),"Error"}}!function(){const t="golf.sivert.io";let r=document.querySelector('link[rel="next"]')?.getAttribute("href");if(!r)return;document.querySelectorAll(".post").forEach((r=>{const o=r.querySelector(".gh-card-link")?.getAttribute("href"),n=document.getElementById(o);o&&n&&e(o,t).then((e=>{n.textContent=`${e} views`}))})),new IntersectionObserver(((o,n)=>{o.forEach((o=>{o.isIntersecting&&r&&async function(e){try{const t=await fetch(e);if(!t.ok)throw new Error("Failed to fetch page");const r=await t.text(),o=(new DOMParser).parseFromString(r,"text/html"),n=o.querySelectorAll(".post"),c=o.querySelector('link[rel="next"]')?.getAttribute("href");return{posts:n,nextLink:c}}catch(e){throw new Error(e)}}(r).then((o=>{let{posts:c,nextLink:s}=o;const i=document.querySelector(".gh-postfeed");c.forEach((r=>{i.append(r);const o=r.querySelector(".gh-card-link")?.getAttribute("href"),n=r.querySelector(".gh-card-meta[id]");o&&n&&e(o,t).then((e=>{n.textContent=`${e} views`}))})),s?(r=s,n.observe(document.querySelector(".post:last-of-type"))):n.disconnect()})).catch((e=>console.error("Failed to fetch next page:",e)))}))}),{rootMargin:"150px"}).observe(document.querySelector(".post:last-of-type"))}()}();
//# sourceMappingURL=index.js.map
